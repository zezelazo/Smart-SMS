// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SmartSMS.Web.Data;
using System;

namespace SmartSMS.Web.Migrations
{
    [DbContext(typeof(SmartSmsContext))]
    [Migration("20170621094238_refactor-with-interface")]
    partial class refactorwithinterface
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-preview3-25813");

            modelBuilder.Entity("SmartSMS.Web.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("GradeId");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("SmartSMS.Web.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("FirstName");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("LastName");

                    b.Property<string>("LegalId");

                    b.Property<string>("Phone");

                    b.Property<string>("Prefix");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SmartSMS.Web.Entities.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("LastModified");

                    b.Property<int>("LevelId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("SmartSMS.Web.Entities.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("SmartSMS.Web.Entities.MessageDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("LastModified");

                    b.Property<DateTime?>("SendedOn");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("MessageDefinitions");
                });

            modelBuilder.Entity("SmartSMS.Web.Entities.Sms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contact");

                    b.Property<string>("ContactType");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Message");

                    b.Property<bool>("NetworkRecived");

                    b.Property<bool>("NetworkSended");

                    b.Property<string>("Phone");

                    b.Property<DateTime>("SendedOn");

                    b.Property<int>("StudentMessageId");

                    b.HasKey("Id");

                    b.HasIndex("StudentMessageId");

                    b.ToTable("Smses");
                });

            modelBuilder.Entity("SmartSMS.Web.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClassId");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int?>("FatherId");

                    b.Property<int?>("FatherInfoId");

                    b.Property<DateTime>("LastModified");

                    b.Property<int?>("MotherId");

                    b.Property<int?>("MotherInfoId");

                    b.Property<int>("StudentInfoId");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("FatherInfoId");

                    b.HasIndex("MotherInfoId");

                    b.HasIndex("StudentInfoId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SmartSMS.Web.Entities.StudentMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("LastModified");

                    b.Property<int>("MessageDefinitionId");

                    b.Property<bool>("SendToFather");

                    b.Property<bool>("SendToMother");

                    b.Property<int>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("MessageDefinitionId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentMessages");
                });

            modelBuilder.Entity("SmartSMS.Web.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartSMS.Web.Entities.Class", b =>
                {
                    b.HasOne("SmartSMS.Web.Entities.Grade", "Grade")
                        .WithMany("Classes")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartSMS.Web.Entities.Grade", b =>
                {
                    b.HasOne("SmartSMS.Web.Entities.Level", "Level")
                        .WithMany("Grades")
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartSMS.Web.Entities.Sms", b =>
                {
                    b.HasOne("SmartSMS.Web.Entities.StudentMessage", "StudentMessage")
                        .WithMany("Smses")
                        .HasForeignKey("StudentMessageId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("SmartSMS.Web.Entities.Student", b =>
                {
                    b.HasOne("SmartSMS.Web.Entities.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartSMS.Web.Entities.Contact", "FatherInfo")
                        .WithMany()
                        .HasForeignKey("FatherInfoId");

                    b.HasOne("SmartSMS.Web.Entities.Contact", "MotherInfo")
                        .WithMany()
                        .HasForeignKey("MotherInfoId");

                    b.HasOne("SmartSMS.Web.Entities.Contact", "StudentInfo")
                        .WithMany()
                        .HasForeignKey("StudentInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartSMS.Web.Entities.StudentMessage", b =>
                {
                    b.HasOne("SmartSMS.Web.Entities.MessageDefinition", "MessageDefinition")
                        .WithMany("Students")
                        .HasForeignKey("MessageDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartSMS.Web.Entities.Student", "Student")
                        .WithMany("Messages")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
